name: Release Notes

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to (re)build and release (e.g., v1.1.0)'
        required: true

jobs:
  generate-release:
    outputs:
      tag: ${{ steps.tag.outputs.tag }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract tag
        id: tag
        run: |
          if [ -n "${{ github.event.inputs.tag }}" ]; then
            REF="${{ github.event.inputs.tag }}"
          else
            REF="${GITHUB_REF##*/}"
          fi
          echo "tag=${REF}" >> $GITHUB_OUTPUT

      - name: Extract changelog section
        id: changelog
        run: |
          tag='${{ steps.tag.outputs.tag }}'
          esc_tag=$(printf '%s' "$tag" | sed 's/[][^$.*/\\]/\\&/g')
          # Find start line of the tag section (## [vX.Y.Z])
          start=$(grep -n "^## \[${esc_tag#v}\]" CHANGELOG.md | head -n1 | cut -d: -f1)
          if [ -z "$start" ]; then
            echo "No changelog section for $tag found; using placeholder." >&2
            printf '%s' "Release $tag" > RELEASE_BODY.txt
          else
            # Find next section header line or EOF
            tail -n +"$start" CHANGELOG.md > _tmp.md
            end=$(awk '/^## \[/{ if (NR>1) { print NR-1; found=1; exit } } END{ if (!found && NR>0) print NR }' _tmp.md)
            if [ -z "$end" ]; then end=$(wc -l < _tmp.md); fi
            head -n "$end" _tmp.md > RELEASE_BODY.txt
          fi
          {
            echo 'body<<EOF'
            cat RELEASE_BODY.txt
            echo 'EOF'
          } >> $GITHUB_OUTPUT

      - name: Create or update GitHub release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          name: Hirundo ${{ steps.tag.outputs.tag }}
          body: ${{ steps.changelog.outputs.body }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-macos:
    name: Build macOS binary
    needs: generate-release
    runs-on: macos-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Swift
        uses: swift-actions/setup-swift@v1
        with:
          swift-version: '6.0'

      - name: Build (release)
        id: build
        run: |
          BIN_DIR=$(swift build -c release --show-bin-path)
          echo "bin_dir=$BIN_DIR" >> $GITHUB_OUTPUT

      - name: Package artifact
        run: |
          mkdir -p dist
          ARCH=$(uname -m)
          cp "${{ steps.build.outputs.bin_dir }}/hirundo" dist/hirundo-macos-$ARCH
          (cd dist && zip -9 hirundo-macos-$ARCH.zip hirundo-macos-$ARCH)
          shasum -a 256 dist/hirundo-macos-$ARCH.zip > dist/hirundo-macos-$ARCH.zip.sha256

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.generate-release.outputs.tag }}
          files: |
            dist/*.zip
            dist/*.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-linux:
    name: Build Linux binary
    needs: generate-release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Swift
        uses: swift-actions/setup-swift@v1
        with:
          swift-version: '6.0'

      - name: Build (release)
        id: build
        run: |
          BIN_DIR=$(swift build -c release --show-bin-path)
          echo "bin_dir=$BIN_DIR" >> $GITHUB_OUTPUT

      - name: Package artifact
        run: |
          mkdir -p dist
          ARCH=$(uname -m)
          cp "${{ steps.build.outputs.bin_dir }}/hirundo" dist/hirundo-linux-$ARCH
          (cd dist && tar -czf hirundo-linux-$ARCH.tar.gz hirundo-linux-$ARCH)
          sha256sum dist/hirundo-linux-$ARCH.tar.gz > dist/hirundo-linux-$ARCH.tar.gz.sha256

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.generate-release.outputs.tag }}
          files: |
            dist/*.tar.gz
            dist/*.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
